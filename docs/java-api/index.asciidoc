[[java-api]]
= Java API

include::../Versions.asciidoc[]

[preface]
== Preface
This section describes the Java API that elasticsearch provides. All
elasticsearch operations are executed using a
<<client,Client>> object. All
operations are completely asynchronous in nature (either accepts a
listener, or returns a future).

Additionally, operations on a client may be accumulated and executed in
<<java-docs-bulk,Bulk>>.

Note, all the APIs are exposed through the
Java API (actually, the Java API is used internally to execute them).

[WARNING]
===================================

We plan on deprecating the `TransportClient` in Elasticsearch 7.0 and removing
it completely in 8.0. Instead, you should be using the
{java-rest}/java-rest-high.html[Java High Level REST Client], which executes
HTTP requests rather than serialized Java requests. The
{java-rest}/java-rest-high-level-migration.html[migration guide] describes
all the steps needed to migrate.

The Java High Level REST Client currently has support for the more commonly
used APIs, but there are a lot more that still need to be added.  You can help
us prioritise by telling us which missing APIs you need for your application
by adding a comment to this issue:
https://github.com/elastic/elasticsearch/issues/27205[Java high-level REST
client completeness].

Any missing APIs can always be implemented today by using the
link:/guide/en/elasticsearch/client/java-rest/current/java-rest-low.html[low
level Java REST Client] with JSON request and response bodies.

===================================

== Javadoc

The javadoc for the transport client can be found at {transport-client-javadoc}/index.html.

== Maven Repository

Elasticsearch is hosted on
http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22[Maven
Central].

For example, you can define the latest version in your `pom.xml` file:

["source","xml",subs="attributes"]
--------------------------------------------------
<dependency>
    <groupId>org.elasticsearch.client</groupId>
    <artifactId>transport</artifactId>
    <version>{version}</version>
</dependency>
--------------------------------------------------

=== Log4j 2 Logger

You need to also include Log4j 2 dependencies:

["source","xml",subs="attributes"]
--------------------------------------------------
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.11.1</version>
</dependency>
--------------------------------------------------

And also provide a Log4j 2 configuration file in your classpath.
For example, you can add in your `src/main/resources` project dir a `log4j2.properties` file like:


["source","properties",subs="attributes"]
--------------------------------------------------
appender.console.type = Console
appender.console.name = console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c] %marker%m%n

rootLogger.level = info
rootLogger.appenderRef.console.ref = console
--------------------------------------------------

=== Using another Logger

If you want to use another logger than Log4j 2, you can use http://www.slf4j.org/[SLF4J] bridge to do that:

["source","xml",subs="attributes"]
--------------------------------------------------
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-to-slf4j</artifactId>
    <version>2.11.1</version>
</dependency>
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
    <version>1.7.24</version>
</dependency>
--------------------------------------------------

http://www.slf4j.org/manual.html[This page] lists implementations you can use. Pick your favorite logger
and add it as a dependency. As an example, we will use the `slf4j-simple` logger:

["source","xml",subs="attributes"]
--------------------------------------------------
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>1.7.21</version>
</dependency>
--------------------------------------------------


:client-reindex-tests: {docdir}/../../modules/reindex/src/test/java/org/elasticsearch/client/documentation

include::client.asciidoc[]

include::docs.asciidoc[]

include::search.asciidoc[]

include::aggs.asciidoc[]

include::query-dsl.asciidoc[]

include::admin/index.asciidoc[]
